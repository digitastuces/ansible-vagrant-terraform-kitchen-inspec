# -*- mode: ruby -*-
# vi: set ft=ruby :

API_VERSION = "2"

Vagrant.configure(API_VERSION) do |config|
  config.vm.box = "debian/bullseye64"
  config.vm.box_check_update = false
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  # config.vm.network "public_network"
  (1..3).each do |i|
    config.vm.define "node#{i}" do |node|
      node.vm.network :private_network, ip: "192.168.3.1#{i}"
      node.vm.network "forwarded_port", guest: 80, host: 8080
      node.vm.network "forwarded_port", guest: 443, host: 8443

      node.vm.hostname = "node#{i}"
      node.vm.provision "shell", inline: <<-SHELL
        #sudo apt-get update -y
        touch test.yaml
        sudo mkdir -p /root/.ssh/
      SHELL

      node.vm.provision "ansible" do |ansible|
        ansible.playbook = "playbook-ansible.yml"
      end

      # Vagrant PUSH
      # La commande vagrant push permet d’invoquer une commande shell 
      # ou un script arbitraire dans le cadre d’un push.
      # Par exemple, vous pouvez lancer des playbooks en prenant l’inventaire généré 
      # dans la partie provisioning :
      node.push.define "local-exec" do |push|
        push.inline = <<-SCRIPT
          ansible-playbook -i .vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory master.yml
          ansible-playbook -i .vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory slave.yml
        SCRIPT
      end

      node.vm.provision "shell" do |s|
        ssh_pub_key = File.readlines("/home/adieng/.ssh/vagrant_rsa.pub").first.strip
        s.inline = <<-SHELL
        echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
        echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
        SHELL
      end
    
      node.vm.provision "file", source: "~/.ssh/vagrant_rsa.pub", destination: "~/.ssh/vagrant_rsa.pub"
    end
  end

  # config.vm.synced_folder "../data", "/vagrant_data"
  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.provider "libvirt" do |hv|
    hv.cpus = "1"
    hv.memory = "512"
  end
  # config.vm.provision "ansible" do |ansible|
  #   ansible.playbook = "site.yml"
  #   ansible.groups = {  
  #     "master" => ["k8s-master"],
  #     "worker" => ["k8s-worker1", "k8s-worker2", "k8s-worker3"],
  #     "kube-cluster:children" => ["master", "worker"]
  #   }
  # end
  config.vm.post_up_message = "Done !!!"
end